Sure, here is an example of dynamic smart contract tests using the Manticore tool:

```yaml
 Scenarios:
  - name: Register a new user with a pseudo address
    steps:
      - deploy:
          contract: Users
          args: ['pseudo_address']

      - execute:
          address: msg.sender
          target: Users
          method: create
          args: [pseudo_address]
        expect:
          emit:
            Event: UserCreated
            Args:
              _address: msg.sender
              _pseudo: pseudo_address

      - verify:
          at: Users
          target: users
          expr:
            eq:
              - msg.sender
              - pseudo_address
              - type: bytes32

  - name: Check if a user exists
    steps:
      - deploy:
          contract: Users
          args: ['pseudo_address']

      - execute:
          address: msg.sender
          target: Users
          method: create
          args: [pseudo_address]
        expect:
          emit:
            Event: UserCreated
            Args:
              _address: msg.sender
              _pseudo: pseudo_address

      - execute:
          address: msg.sender
          target: Users
          method: exists
          args: [msg.sender]
        expect:
          result: true

      - execute:
          address: another_user
          target: Users
          method: exists
          args: [another_user]
        expect:
          result: false

```

In this example, we have two scenarios: 

1. Register a new user: This scenario deploys the Users contract and registers a new user with a pseudo address. It expects the UserCreated event to be emitted with the correct address and pseudo.

2. Check if a user exists: This scenario first deploys the Users contract and creates a user. Then, it checks if the creator exists and another random address exists in the Users contract. 

These tests can be executed using the Manticore tool, which dynamically interacts with the smart contract and verifies the expected behavior. 

Note that this is just an example, and you can create more specific tests based on the functionality of your smart contract. 

If you want, I can expand on how to use Manticore to run these tests.